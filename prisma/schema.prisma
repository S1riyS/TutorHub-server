generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String

  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  middleName  String  @map("middle_name")
  phoneNumber String  @unique @map("phone_number")
  imageLink   String? @map("image_link")

  role   Role
  tokens Token[]

  tutorProfile   TutorProfile?
  studentProfile StudentProfile?

  @@map("users")
}

model Token {
  value String   @unique @default(uuid())
  exp   DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("tokens")
}

model TutorProfile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  bio             String?
  birthDate       DateTime         @map("birth_date")
  teachingFormats TeachingFormat[]
  careerStartYear Int

  achievements TutorAchievement[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("tutor_profiles")
}

model TutorAchievement {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  data          String
  startYear     Int                      @map("start_year")
  endYear       Int?                     @map("end_year")
  category      TutorAchievementCategory
  attachmentUrl String?                  @map("attachment_url")

  isConfirmed Boolean @default(false) @map("is_confirmed")

  TutorProfile   TutorProfile? @relation(fields: [tutorProfileId], references: [id])
  tutorProfileId String?       @map("tutor_profile_id")
}

model StudentProfile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  grade Int

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("student_profiles")
}

enum TeachingFormat {
  REMOTELY
  AT_HOME
  GOES_TO_STUDENT
}

enum TutorAchievementCategory {
  EDUCATION
  EXPERIENCE
  OTHER
}

enum Role {
  STUDENT
  TUTOR
  ADMIN
}
